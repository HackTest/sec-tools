.TH "SEC\-GATHER\-LISTENPORTS" "1" "May 2017" "" ""
.hy
.SH NAME
.PP
sec\-gather\-listenports \[en] Output listening ports
.SH SYNOPSIS
.PP
\f[B]sec\-gather\-listenports\f[] [\f[B]\-h\f[]] [\f[B]\-\-version\f[]]
[\f[B]\-\-debug\f[]] [\f[B]\-\-annotate\f[] \f[I]ANNOTATIONFILE\f[]]
[\f[B]\-\-no\-local\f[]]
.SH DESCRIPTION
.PP
\f[B]sec\-gather\-listenports\f[] outputs listening TCP ports on the
current machine.
.SH OPTIONS
.TP
.B \f[B]\-h\f[], \f[B]\-\-help\f[]
Display this help message and exit
.RS
.RE
.TP
.B \f[B]\-\-version\f[]
show program\[aq]s version number and exit
.RS
.RE
.TP
.B \f[B]\-\-debug\f[]
Show debug info
.RS
.RE
.TP
.B \f[B]\-\-annotate\f[] \f[I]ANNOTATIONFILE\f[]
Annotation file.
A JSON file who\[aq]s information will be joined with the gathered
results.
This can be used to add custom information to results.
.RS
.RE
.TP
.B \f[B]\-\-no\-local\f[]
Do not include services listening on 127.0.0.1
.RS
.RE
.SH EXAMPLES
.PP
The default output looks like this:
.IP
.nf
\f[C]
$\ sec\-gather\-listenports
{
\ \ \ \ "listenports":\ {
\ \ \ \ \ \ \ \ "8000":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "pid":\ 30925,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "remote_address":\ "0.0.0.0",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "recv_queue":\ 0,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "verified":\ false,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "service":\ "Unknown",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "remote_port":\ 0,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "proto":\ "tcp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "local_port":\ 8000,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "state":\ "LISTEN",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "prog":\ "python2.7",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "local_address":\ "127.0.0.1",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "send_queue":\ 0
\ \ \ \ \ \ \ \ },\ 
\ \ \ \ \ \ \ \ "25":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "pid":\ null,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "remote_address":\ "::",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "recv_queue":\ 0,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "verified":\ false,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "service":\ "Unknown",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "remote_port":\ 0,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "proto":\ "tcp6",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "local_port":\ 25,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "state":\ "LISTEN",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "prog":\ null,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "local_address":\ "::",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "send_queue":\ 0
\ \ \ \ \ \ \ \ }
\ \ \ \ }
}
\f[]
.fi
.PP
we can annotate the results by passing an annotation file.
That file would look something like:
.IP
.nf
\f[C]
{
\ \ \ \ "listenports":\ {
\ \ \ \ \ \ \ \ "8000":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "verified":\ true,
\ \ \ \ \ \ \ \ \ \ \ \ "comment":\ "Local\ python\ dev\ server"
\ \ \ \ \ \ \ \ }
\ \ \ \ }
}
\f[]
.fi
.PP
Calling \f[B]sec\-gather\-listenports\f[] with the \f[I]\-\-annotate\f[]
option:
.IP
.nf
\f[C]
$\ sec\-gather\-listenports\ \-\-annotate\ listenports_annotate.json
\f[]
.fi
.PP
Would result in the \f[I]verified\f[] and \f[I]comment\f[] fields to be
added to port 8000:
.IP
.nf
\f[C]
{
\ \ \ \ "listenports":\ {
\ \ \ \ \ \ \ \ "8000":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "pid":\ 30925,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "remote_address":\ "0.0.0.0",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "recv_queue":\ 0,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "verified":\ false,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "service":\ "Unknown",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "remote_port":\ 0,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "proto":\ "tcp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "local_port":\ 8000,\ 
\ \ \ \ \ \ \ \ \ \ \ \ "state":\ "LISTEN",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "prog":\ "python2.7",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "local_address":\ "127.0.0.1",\ 
\ \ \ \ \ \ \ \ \ \ \ \ "send_queue":\ 0,
\ \ \ \ \ \ \ \ \ \ \ \ "verified":\ true,
\ \ \ \ \ \ \ \ \ \ \ \ "comment":\ "Local\ python\ dev\ server"
\ \ \ \ \ \ \ \ },\ 
\ \ \ \ \ \ \ \ "25":\ {
\ \ \ \ \ \ \ \ ...
\f[]
.fi
.SH COPYRIGHT
.PP
Copyright 2017, Ferry Boender.
.PP
Licensed under the MIT license.
For more information, see the LICENSE file.
.SH AUTHORS
Ferry Boender.
