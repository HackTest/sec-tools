.TH "SEC\-GATHER\-PORTSCAN" "1" "May 2017" "" ""
.hy
.SH NAME
.PP
sec\-gather\-portscan \[en] Perform port scan and output ports.
.SH SYNOPSIS
.PP
\f[B]sec\-gather\-portscan\f[] [\f[B]\-h\f[]] [\f[B]\-\-version\f[]]
[\f[B]\-\-debug\f[]] [\f[B]\-\-format\f[] \f[I]{json,html}\f[]]
[\f[B]\-\-annotate\f[] \f[I]ANNOTATIONFILE\f[]] [\f[B]\-\-ports\f[]
\f[I]PORTS\f[]] [\f[B]\-\-all\f[]] [\f[B]\-\-ports\-exclude\f[]
\f[I]PORTS\f[]] \f[I]TARGETS\f[]
.SH DESCRIPTION
.PP
Perform a port scan against a host using nmap (which should be
installed) and return the results in various formats.
It must be run as root, or nmap won\[aq]t report all open ports for some
reason.
.PP
By default, nmap scans the "top 1000 most used ports".
Which exactly those are depends on your version of nmap.
You can use the \f[I]\-\-debug\f[] option to find out which ports are
included in the scan.
Use the \f[I]\-\-ports\f[] option to specify your own range.
.PP
The hostnames in the results may not match the names of the specified
hosts to scan, because nmap does a reverse lookup of the hostname and
there is no way to match these up.
.PP
You may provide an annotation file (see \f[B]EXAMPLES\f[]) to add custom
information to the results such as validated ports.
Make sure you specify the reverse\-looked up hostname (see paragraph
above).
.SH OPTIONS
.TP
.B \f[B]\-h\f[], \f[B]\-\-help\f[]
Display this help message and exit
.RS
.RE
.TP
.B \f[B]\-\-version\f[]
show program\[aq]s version number and exit
.RS
.RE
.TP
.B \f[B]\-\-debug\f[]
Show debug info
.RS
.RE
.TP
.B \f[B]\-\-format\f[] \f[I]{json,html}\f[]
Output format.
Default is "\f[I]json\f[]"
.RS
.RE
.TP
.B \f[B]\-\-annotate\f[] \f[I]ANNOTATIONFILE\f[]
Annotation file.
A JSON file who\[aq]s information will be joined with the gathered
results.
This can be used to add custom information to results.
.RS
.RE
.TP
.B \f[B]\-\-ports\f[] \f[I]PORTS\f[]
TCP ports to scan in nmap format
.RS
.RE
.TP
.B \f[B]\-\-all\f[]
Report all ports, not just open ones.
.RS
.RE
.TP
.B \f[B]\-\-ports\-exclude\f[] \f[I]PORTS\f[]
TCP ports to exclude in nmap format
.RS
.RE
.TP
.B \f[B]TARGET\f[]
One or more target(s) to scan or a range of targets in the nmap format.
.RS
.RE
.SH EXAMPLES
.PP
Scan the privileged ports and port 8080 on host test.example.com:
.IP
.nf
\f[C]
sudo\ ./sec\-gather\-portscan\ \-\-ports\ 1\-1024,8080\ test.example.com
{
\ \ \ \ "openports":\ {
\ \ \ \ \ \ \ \ "test.example.com":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "25":\ {
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "reason":\ "syn\-ack",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "service_name":\ "smtp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "state":\ "open",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "protocol":\ "tcp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "port":\ 25
\ \ \ \ \ \ \ \ \ \ \ \ },\ 
\ \ \ \ \ \ \ \ \ \ \ \ "8080":\ {
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "reason":\ "syn\-ack",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "service_name":\ "http\-proxy",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "state":\ "open",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "protocol":\ "tcp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "port":\ 8080
\ \ \ \ \ \ \ \ \ \ \ \ }
\ \ \ \ \ \ \ \ }
\ \ \ \ }
}
\f[]
.fi
.PP
Exclude a range of ports:
.IP
.nf
\f[C]
sudo\ ./sec\-gather\-portscan\ \-\-ports\-exclude\ 22:25,631\ \-\-all\ 127.0.0.1
{
\ \ \ \ "openports":\ {
\ \ \ \ \ \ \ \ "localhost":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "6667":\ {
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "reason":\ "syn\-ack",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "service_name":\ "irc",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "state":\ "open",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "protocol":\ "tcp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "port":\ 6667
\ \ \ \ \ \ \ \ \ \ \ \ },\ 
\ \ \ \ \ \ \ \ \ \ \ \ "8443":\ {
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "reason":\ "syn\-ack",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "service_name":\ "https\-alt",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "state":\ "open",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "protocol":\ "tcp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "port":\ 8443
\ \ \ \ \ \ \ \ \ \ \ \ }
\ \ \ \ \ \ \ \ }
\ \ \ \ }
}
\f[]
.fi
.PP
You can annotate scanned ports your own info such as verified ports.
The annotation file looks like this:
.IP
.nf
\f[C]
{
\ \ \ \ "localhost":\ {
\ \ \ \ \ \ \ \ "25":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "verified":\ true,
\ \ \ \ \ \ \ \ \ \ \ \ "comment":\ "SMTP\ server"
\ \ \ \ \ \ \ \ },
\ \ \ \ \ \ \ \ "8080":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "verified":\ true,
\ \ \ \ \ \ \ \ \ \ \ \ "comment":\ "Exposed\ dev\ backends"
\ \ \ \ \ \ \ \ }
\ \ \ \ }
}
\f[]
.fi
.PP
Note that the given hostname in the annotation file \f[I]must\f[] match
the hostname as given in the output of \f[I]sec\-gather\-portscan\f[],
because the output has the reverse\-lookup hostname, not the one given
as the argument.
.IP
.nf
\f[C]
sudo\ ./sec\-gather\-portscan\ \-\-annotate\ portscan.annotate\ \-\-ports\ 1\-1024,8080\ test.example.com
{
\ \ \ \ "openports":\ {
\ \ \ \ \ \ \ \ "localhost":\ {
\ \ \ \ \ \ \ \ \ \ \ \ "25":\ {
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "comment":\ "SMTP\ server",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "protocol":\ "tcp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "service_name":\ "smtp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "state":\ "open",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "reason":\ "syn\-ack",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "verified":\ true,\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "port":\ 25
\ \ \ \ \ \ \ \ \ \ \ \ },\ 
\ \ \ \ \ \ \ \ \ \ \ \ "8080":\ {
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "comment":\ "Exposed\ dev\ backends",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "protocol":\ "tcp",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "service_name":\ "http\-proxy",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "state":\ "open",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "reason":\ "syn\-ack",\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "verified":\ true,\ 
\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ "port":\ 8080
\ \ \ \ \ \ \ \ \ \ \ \ }
\ \ \ \ \ \ \ \ }
\ \ \ \ }
}
\f[]
.fi
.SH COPYRIGHT
.PP
Copyright 2017, Ferry Boender.
.PP
Licensed under the MIT license.
For more information, see the LICENSE file.
.SH AUTHORS
Ferry Boender.
