#!/usr/bin/env python

# Copyright 2017, Ferry Boender.
# Licensed under the MIT license. For more information, see the LICENSE file.

import os
import sys
import argparse
import subprocess
import json
import socket
import tools

__VERSION__ = "0.1"


def gather(cmd):
    """
    Helper method that's sent to templates so they can easily gather additional
    information.
    """
    p = subprocess.Popen(cmd, shell=True, stdin=subprocess.PIPE,
                         stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    stdout, stderr = p.communicate()
    if p.returncode != 0:
        # FIXME: Raise proper error
        sys.stderr.write(stderr)
        raise OSError("Process exited with exit code {}: {}".format(p.returncode, cmd))

    return stdout


if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Generate reports')
    parser.add_argument('--version', action='version', version=__VERSION__)
    parser.add_argument('--debug', dest="debug", action='store_true', default=False, help="Show debug info")
    parser.add_argument('report', metavar='REPORT', type=str, help='Mako report template')
    parser.add_argument('assets', metavar='ASSETS', type=str, default=None, nargs='*', help='JSON files to be made accessible to the report.')
    args = parser.parse_args()

    if args.report is None:
        sys.stderr.write("Please specify a --report <report.tpl>\n")
        sys.exit(1)

    fqdn = socket.gethostname()
    if not '.' in fqdn:
        fqdn = socket.getfqdn()

    assets = {}
    for asset in args.assets:
        assets[asset.replace('/', '__')] = json.load(open(asset, 'r'))

    sys.stdout.write(tools.tpl_file(args.report, fqdn=fqdn, gather=gather, **assets))
